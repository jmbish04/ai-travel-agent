{
  "name": "voyant-travel-assistant",
  "version": "1.0.0",
  "description": "AI-powered travel assistant for planning trips with weather, attractions, and packing recommendations",
  "main": "dist/index.js",
  "bin": {
    "voyant": "dist/cli.js"
  },
  "type": "module",
  "keywords": [
    "travel",
    "assistant",
    "ai",
    "weather",
    "attractions",
    "planning"
  ],
  "author": "Your Name",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/voyant-travel-assistant"
  },
  "homepage": "https://github.com/yourusername/voyant-travel-assistant#readme",
  "scripts": {
    "dev": "npm run start & sleep 2 && npm run cli",
<<<<<<< HEAD
    "cli": "LOG_LEVEL=info tsx src/cli.ts",
    "cli:debug": "LOG_LEVEL=debug tsx src/cli.ts",
    "build": "tsc -p tsconfig.json && cp -r src/prompts dist/ && mkdir -p dist/public && (cp ../docs/index.html dist/public/ || echo 'index.html not found') && (cp ../docs/llmchat.html dist/public/ || echo 'llmchat.html not found')",
    "start": "node dist/api/server.js",
    "start:prod": "NODE_ENV=production node dist/api/server.js",
    "test:endless": "node scripts/endless-test.mjs",
    "metrics": "tsx src/util/metrics-server.ts",
    "dev:stop": "pkill -f 'node dist/api/server.js' && pkill -f 'tsx src/cli.ts'",
    "dashboard": "open http://localhost:3001",
    "prepublishOnly": "npm run build",
    "test": "jest --runInBand --config jest.config.cjs",
    "test:coverage": "COVERAGE=true jest --runInBand --config jest.config.cjs",
    "test:transcripts": "RECORD_TRANSCRIPTS=true jest --runInBand --config jest.config.cjs",
    "test:weather": "jest --runInBand --config jest.config.cjs --testNamePattern=\"weather|misspelled|abbreviation\"",
    "test:packing": "jest --runInBand --config jest.config.cjs --testNamePattern=\"packing\"",
    "ingest-policies": "tsx scripts/vectara-ingest.ts",
    "test-vectara": "tsx scripts/vectara-test.ts",
    "test:attractions": "jest --runInBand --config jest.config.cjs --testNamePattern=\"attractions\"",
    "test:context": "jest --runInBand --config jest.config.cjs --testNamePattern=\"switch\"",
    "test:multilingual": "jest --runInBand --config jest.config.cjs --testNamePattern=\"language|Spanish\"",
    "test:clarification": "jest --runInBand --config jest.config.cjs --testNamePattern=\"clarifier|refinement\"",
    "test:e2e:01": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/01-weather_packing.test.ts",
    "test:e2e:02": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/02-attractions_variants.test.ts",
    "test:e2e:03": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/03-intent_family_thread.test.ts",
    "test:e2e:04": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/04-input_variance_cot.test.ts",
    "test:e2e:05": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/05-errors_api_failures.test.ts",
    "test:e2e:06": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/06-citations_unrelated_empty_system.test.ts",
    "test:e2e:07": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/07-conflicting_abrupt_sensitive_multilang_metrics.test.ts",
    "test:e2e:09": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/09-demo_authentic_conversation.test.ts",
    "test:e2e:10": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/10-nlp-pipeline-verify.test.ts",
    "test:e2e:10:transcripts": "RECORD_TRANSCRIPTS=true jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/10-nlp-pipeline-verify.test.ts",
    "test:e2e:chaotic": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/chaotic_conversation_flow.test.ts",
    "test:e2e:deep-research": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/deep_research_consent_flow.test.ts",
    "test:e2e:flight-clarification": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/flight_clarification_flow.test.ts",
    "test:e2e:mixed-language": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/mixed_language_processing.test.ts",
    "test:e2e:error-recovery": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/error_recovery_complex_dialogues.test.ts",
    "test:e2e:transcripts": "RECORD_TRANSCRIPTS=true jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/",
    "test:e2e:demo-flow": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/demo_flow.test.ts",
    "test:e2e:all": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/",
    "test:e2e:real-scenarios": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/real_scenarios.test.ts",
    "test:e2e:edge-cases": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/e2e/edge_cases.test.ts",
    "test:custom": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/custom/",
    "test:custom:api": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/custom/api_or_cli.test.ts",
    "test:custom:search": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/custom/ --testNamePattern=\"search|brave|tavily\"",
    "test:custom:fallback": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/custom/ --testNamePattern=\"fallback\"",
    "test:custom:core": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/custom/ --testNamePattern=\"graph|router|memory|blend\"",
    "test:custom:tools": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/custom/tools.test.ts",
    "test:custom:security": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/custom/security.test.ts",
    "test:custom:runner": "node scripts/run-custom-tests.js",
    "test:custom:watch": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/custom/ --watch",
    "test:custom:transcripts": "RECORD_TRANSCRIPTS=true jest --runInBand --config jest.config.cjs --testPathPattern=tests/custom/",
    "test:custom:diagnostic": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/custom/diagnostic.test.ts --verbose",
    "test:custom:simple": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/custom/simple_api_test.test.ts --verbose",
    "test:custom:very-simple": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/custom/simple_test.test.ts --verbose",
    "test:custom:working": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/custom/working_test.test.ts --verbose",
    "test:custom:debug": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/custom/ --verbose --detectOpenHandles",
    "test:tsx": "tsx --test tests/integration/destinations.test.ts",
    "test:custom:fix-imports": "node scripts/fix-imports.js",
    "test:unit": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/unit/",
    "test:unit:watch": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/unit/ --watch",
    "test:unit:circuit": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/unit/ --testNamePattern=\"circuit|rate\"",
    "test:unit:ai": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/unit/ --testNamePattern=\"ai\"",
    "test:unit:router": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/unit/ --testNamePattern=\"policy\"",
    "test:unit:data": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/unit/ --testNamePattern=\"amadeus|vectara|flight|parser\"",
    "test:integration": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/integration/",
    "test:integration:watch": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/integration/ --watch",
    "test:integration:e2e": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/integration/ --testNamePattern=\"flight_search|nlp-pipeline|resilience\"",
    "test:integration:api": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/integration/ --testNamePattern=\"crawlee|ner|date\"",
    "test:integration:date": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/integration/date_formatting.test.ts",
    "test:edge": "jest --runInBand --config jest.config.cjs --testNamePattern=\"typos|emojis|thread|leakage|non-existent|long messages\"",
    "test:golden": "jest --runInBand --config jest.config.cjs --testPathPattern=tests/golden/",
    "generate-deliverables": "npm run test:transcripts",
    "lint": "eslint .",
    "format": "prettier -w ."
  },
  "overrides": {
    "onnxruntime-web": "1.19.2"
  },
  "dependencies": {
    
    "@langchain/langgraph": "^0.4.9",
    "@types/express": "^4.17.21",
    "@types/langdetect": "^0.2.0",
    "@types/markdown-it": "^14.1.2",
    "@types/node": "^20.12.12",
    
    "@yusifaliyevpro/countries": "^2.2.2",
    "amadeus": "^11.0.0",
    "bottleneck": "^2.19.5",
    "brave-search": "^0.9.0",
    "chalk": "^5.6.0",
    "cockatiel": "^3.2.1",
    "crawlee": "^3.14.1",
    "dotenv": "^16.4.5",
    "express": "^4.19.2",
    "langdetect": "^0.2.1",
    "markdown-it": "^14.1.0",
    "opossum": "^8.0.0",
    "pino": "^9.0.0",
    "playwright": "^1.55.0",
    "sharp": "^0.34.3",
    "tavily": "^1.0.2",
    "typescript": "^5.5.4",
    "undici": "^6.19.8",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@babel/core": "^7.28.4",
    "@babel/preset-env": "^7.28.3",
    "@eslint/js": "^9.34.0",
    "@types/chalk": "^0.4.31",
    "@types/jest": "^30.0.0",
    "@types/langdetect": "^0.2.2",
    "@types/nock": "^10.0.3",
    "@types/supertest": "^6.0.3",
    "babel-jest": "^30.1.2",
    "eslint": "^9.4.0",
    "eslint-config-prettier": "^9.1.0",
    "jest": "^29.7.0",
    "jscpd": "^4.0.5",
    "nock": "^14.0.10",
    "prettier": "^3.2.5",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.9.2",
    "tsx": "^4.15.7",
    "typescript-eslint": "^8.44.1"
  }
}
